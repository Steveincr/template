{
	"version": "2",
	"templates": [
		{
			"categories": [
				"Other",
				"Tools"
			],
			"description": "ArchiveBox is a powerful, self-hosted internet archiving solution to collect, save, and view sites you want to preserve offline.",
			"image": "archivebox/archivebox:master",
			"logo": "https://raw.githubusercontent.com/Steveincr/template/main/images/archivebox.png",
			"name": "archivebox",
			"note": "By default an admin user is not created. You can do so by launching a shell in the container and executing 'archivebox manage createsuperuser'. Documentation is Available \u003ca href='https://github.com/ArchiveBox/ArchiveBox/wiki'\u003ehere\u003c/a\u003e.",
			"platform": "linux",
			"ports": [
				"8002:8000/tcp"
			],
			"restart_policy": "unless-stopped",
			"title": "Archivebox",
			"type": 1,
			"volumes": [
				{
					"bind": "/docker/config/archivebox",
					"container": "/data"
				}
			],
			"env": [
				{
					"default": "*",
					"label": "ALLOWED_HOSTS",
					"name": "ALLOWED_HOSTS"
				},
				{
					"default": "750m",
					"label": "MEDIA_MAX_SIZE",
					"name": "MEDIA_MAX_SIZE"
				},
				{
					"default": true,
					"label": "PUBLIC_INDEX",
					"name": "PUBLIC_INDEX"
				},
				{
					"default": true,
					"label": "PUBLIC_SNAPSHOTS",
					"name": "PUBLIC_SNAPSHOTS"
				},
				{
					"default": false,
					"label": "PUBLIC_ADD_VIEW",
					"name": "PUBLIC_ADD_VIEW"
				}
			]
		},
		{
			"categories": [
				"Cloud",
				"Books"
			],
			"description": "Calibre Web is a web app providing a clean interface for browsing, reading and downloading eBooks using an existing Calibre database.\n\n  [br][br]\n  [b][u][span style='color: #E80000;']Configuration[/span][/u][/b][br]\n  [b]/config[/b] Where Calibre-web should store it's database[br]\n  [b]/books[/b] Path to your calibre library metadata.db file[br]",
			"env": [
				{
					"default": "1000",
					"label": "PUID",
					"name": "PUID"
				},
				{
					"default": "1003",
					"label": "PGID",
					"name": "PGID"
				}
			],
			"image": "linuxserver/calibre-web:latest",
			"logo": "https://raw.githubusercontent.com/Steveincr/pi-hosted/master/images/calibre-web-icon.png",
			"name": "calibre-web",
			"platform": "linux",
			"ports": [
				"8083:8083/tcp"
			],
			"restart_policy": "unless-stopped",
			"title": "Calibre Web",
			"type": 1,
			"volumes": [
				{
					"bind": "/docker/media/books",
					"container": "/books"
				},
				{
					"bind": "/docker/config/Calibre-web",
					"container": "/config"
				}
			]
		},
		{
			"categories": [
				"Other",
				"Tools"
			],
			"description": "Code-server is VS Code running on a remote server, accessible through the browser.",
			"env": [
				{
					"default": "1000",
					"label": "PUID",
					"name": "PUID"
				},
				{
					"default": "1003",
					"label": "PGID",
					"name": "PGID"
				},
				{
					"default": "America/Costa_Rica",
					"label": "TZ",
					"name": "TZ"
				},
				{
					"label": "PASSWORD",
					"name": "PASSWORD"
				},
				{
					"label": "SUDO_PASSWORD",
					"name": "SUDO_PASSWORD"
				},
				{
					"default": "example.my.domain",
					"label": "PROXY_DOMAIN",
					"name": "PROXY_DOMAIN"
				}
			],
			"image": "linuxserver/code-server:latest",
			"logo": "https://raw.githubusercontent.com/Steveincr/pi-hosted/master/images/code-server.png",
			"name": "code-server",
			"platform": "linux",
			"ports": [
				"8443:8443/tcp"
			],
			"restart_policy": "unless-stopped",
			"title": "Code Server",
			"type": 1,
			"volumes": [
				{
					"bind": "/docker/config/Code-Server",
					"container": "/config"
				}
			]
		},
		{
			"categories": [
				"Downloaders"
			],
			"description": "Deluge is a lightweight, Free Software, cross-platform BitTorrent client providing: Full Encryption, WebUI, Plugin System, Much more...",
			"env": [
				{
					"default": "1000",
					"label": "PUID",
					"name": "PUID"
				},
				{
					"default": "1003",
					"label": "PGID",
					"name": "PGID"
				},
				{
					"default": "022",
					"label": "UMASK",
					"name": "UMASK"
				}
			],
			"image": "linuxserver/deluge:latest",
			"logo": "https://raw.githubusercontent.com/Steveincr/pi-hosted/master/images/deluge-icon.png",
			"name": "deluge",
			"platform": "linux",
			"ports": [
				"6881:6881/tcp",
				"8112:8112/tcp"
			],
			"restart_policy": "unless-stopped",
			"title": "Deluge",
			"type": 1,
			"volumes": [
				{
					"bind": "/docker/config/Deluge",
					"container": "/config"
				},
				{
					"bind": "/docker/download",
					"container": "/downloads"
				}
			]
		},
		{
			"categories": [
				"Backup",
				"Cloud",
				"Other",
				"Productivity",
				"Tools"
			],
			"description": "Free backup software to store encrypted backups online, Duplicati works with standard protocols like FTP, SSH, WebDAV as well as popular services like Microsoft OneDrive, Amazon Cloud Drive and S3, Google Drive, box.com, Mega, hubiC and many others.",
			"env": [
				{
					"default": "1000",
					"label": "PUID",
					"name": "PUID"
				},
				{
					"default": "1003",
					"label": "PGID",
					"name": "PGID"
				}
			],
			"image": "linuxserver/duplicati:latest",
			"logo": "https://raw.githubusercontent.com/Steveincr/pi-hosted/master/images/duplicati-icon.png",
			"name": "duplicati",
			"platform": "linux",
			"ports": [
				"8200:8200/tcp"
			],
			"restart_policy": "unless-stopped",
			"title": "Duplicati",
			"type": 1,
			"volumes": [
				{
					"bind": "/docker/config/Duplicati",
					"container": "/config"
				},
				{
					"container": "/tmp"
				},
				{
					"container": "/backups"
				},
				{
					"container": "/source"
				}
			]
		},
		{
			"categories": [
				"Video",
				"Music",
				"Photos"
			],
			"description": "Emby organizes video, music, live TV, and photos from personal media libraries and streams them to smart TVs, streaming boxes and mobile devices. This container is packaged as a standalone emby Media Server.",
			"env": [
				{
					"default": "1000",
					"label": "PUID",
					"name": "PUID"
				},
				{
					"default": "1003",
					"label": "PGID",
					"name": "PGID"
				},
				{
					"default": "America/Costa_Rica",
					"label": "TZ",
					"name": "TZ"
				}
			],
			"image": "linuxserver/emby:latest",
			"logo": "https://raw.githubusercontent.com/Steveincr/pi-hosted/master/images/emby.png",
			"name": "emby",
			"platform": "linux",
			"ports": [
				"8096:8096/tcp",
				"8920:8920/tcp"
			],
			"restart_policy": "unless-stopped",
			"title": "Emby",
			"type": 1,
			"volumes": [
				{
					"bind": "/docker/config/Emby",
					"container": "/config"
				},
				{
					"bind": "/docker/media/tv",
					"container": "/data/tvshows"
				},
				{
					"bind": "/docker/media/movies",
					"container": "/data/movies"
				}
			]
		},
		{
			"categories": [
				"Other",
				"Tools"
			],
			"description": "[arm] Web File Browser which can be used as a middleware or standalone app.",
			"image": "filebrowser/filebrowser:latest",
			"logo": "https://raw.githubusercontent.com/Steveincr/pi-hosted/master/images/filebrowser.png",
			"name": "filebrowser",
			"note": "The default user and password is admin/admin.",
			"platform": "linux",
			"ports": [
				"8082:80/tcp"
			],
			"restart_policy": "unless-stopped",
			"title": "FileBrowser",
			"type": 1,
			"volumes": [
				{
					"bind": "/",
					"container": "/srv"
				}
			]
		},
		{
			"categories": [
				"Other",
				"Tools"
			],
			"description": "Flame is self-hosted startpage for your server. Its design is inspired (heavily) by SUI. Flame is very easy to setup and use. With built-in editors, it allows you to setup your very own application hub in no time - no file editing necessary.",
			"image": "pawelmalak/flame:multiarch",
			"logo": "https://raw.githubusercontent.com/Steveincr/pi-hosted/master/images/flame.png",
			"name": "Flame",
			"platform": "linux",
			"ports": [
				"5005:5005/tcp"
			],
			"env": [
				{
					"default": "",
					"label": "Flame Password",
					"name": "PASSWORD"
				}
			],
			"restart_policy": "unless-stopped",
			"title": "Flame",
			"type": 1,
			"volumes": [
				{
					"bind": "/docker/config/Flame/data",
					"container": "/app/data"
				},
				{
					"bind": "/var/run/docker.sock",
					"container": "/var/run/docker.sock"
				}
			]
		},
		{
			"categories": [
				"SCM",
				"Tools"
			],
			"description": "Gitea with Mariadb: A painless self-hosted Git service.",
			"logo": "https://raw.githubusercontent.com/Steveincr/pi-hosted/master/images/gitea.png",
			"name": "gitea-mysql",
			"note": "More possible Environment Variables: https://docs.gitea.io/en-us/install-with-docker/#managing-deployments-with-environment-variables",
			"env": [
				{
					"default": "1000",
					"label": "USER_UID",
					"name": "USER_UID"
				},
				{
					"default": "1003",
					"label": "USER_GID",
					"name": "USER_GID"
				},
                {
					"default": "America/Costa_Rica",
                    "label": "TZ",
                    "name": "TZ"
                },
				{
					"default": "gitea",
					"label": "DATABASE_NAME",
					"name": "DATABASE_NAME"
				},
				{
					"default": "gitea",
					"label": "DATABASE_USER",
					"name": "DATABASE_USER"
				},
                {
                    "label": "DATABASE_PASSWORD",
                    "name": "DATABASE_PASSWORD",
                    "default": ""
                },
				{
                    "label": "MYSQL_ROOT_PASSWORD",
                    "name": "MYSQL_ROOT_PASSWORD",
                    "default": ""
                }
			],
			"platform": "linux",
			"restart_policy": "unless-stopped",
			"title": "Gitea with Mariadb",
			"type": 3,
			"repository": {
				"stackfile": "stack/gitea-mariadb.yml",
				"url": "https://github.com/novaspirit/pi-hosted/"
			}
		},
		{
			"categories": [
				"Tools",
				"Web",
				"Other"
			],
			"description": "Heimdall is a way to organise all those links to your most used web sites and web applications in a simple way.",
			"env": [
				{
					"default": "1000",
					"label": "PUID",
					"name": "PUID"
				},
				{
					"default": "1003",
					"label": "PGID",
					"name": "PGID"
				}
			],
			"image": "linuxserver/heimdall:latest",
			"logo": "https://raw.githubusercontent.com/Steveincr/pi-hosted/master/images/heimdall-icon.png",
			"name": "heimdall",
			"platform": "linux",
			"ports": [
				"7202:80/tcp",
				"7203:443/tcp"
			],
			"restart_policy": "unless-stopped",
			"title": "Heimdall",
			"type": 1,
			"volumes": [
				{
					"bind": "/docker/config/Heimdall",
					"container": "/config"
				}
			]
		},
		{
			"categories": [
				"Other",
				"Tools"
			],
			"description": "A dead simple static HOMepage for your servER to keep your s ervices on hand, from a simple yaml configuration file.",
			"image": "b4bz/homer:latest",
			"logo": "https://raw.githubusercontent.com/Steveincr/pi-hosted/master/images/homer.png",
			"name": "homer",
			"note": "This container requires a yml file within the config volume. See the documentation here https://github.com/bastienwirtz/homer",
			"platform": "linux",
			"ports": [
				"8902:8080/tcp"
			],
			"restart_policy": "unless-stopped",
			"title": "Homer",
			"type": 1,
			"env": [
				{
					"default": "1003",
					"label": "PGID",
					"name": "PGID"
				},
				{
					"default": "1000",
					"label": "PUID",
					"name": "PUID"
				}
			],
			"volumes": [
				{
					"bind": "/docker/config/Homer/assets",
					"container": "/www/assets"
				},
				{
					"bind": "/docker/config/Homer",
					"container": "/www/config.yml"
				}
			]
		},
		{
			"categories": [
				"Downloaders",
				"Tools"
			],
			"description": "Jackett works as a proxy server it translates queries from apps like Sonarr etc into tracker-site-specific http queries and parses the html response sending results back to the requesting software.[",
			"env": [
				{
					"default": "1000",
					"label": "PUID",
					"name": "PUID"
				},
				{
					"default": "1003",
					"label": "PGID",
					"name": "PGID"
				}
			],
			"image": "linuxserver/jackett:latest",
			"logo": "https://raw.githubusercontent.com/Steveincr/pi-hosted/master/images/jacket-icon.png",
			"name": "jackett",
			"platform": "linux",
			"ports": [
				"9117:9117/tcp"
			],
			"restart_policy": "unless-stopped",
			"title": "Jackett",
			"type": 1,
			"volumes": [
				{
					"bind": "/docker/config/Jackett",
					"container": "/config"
				},
				{
					"bind": "/docker/data",
					"container": "/data"
				}
			]
		},
		{
			"categories": [
				"Downloaders",
				"Tools"
			],
			"description": "JDownloader docker image",
			"env": [
				{
					"default": "",
					"label": "MYJD_DEVICE_NAME",
					"name": "MYJD_DEVICE_NAME"
				},
				{
					"default": "",
					"label": "MYJD_USER",
					"name": "MYJD_USER"
				},
				{
					"default": "",
					"label": "MYJD_PASSWORD",
					"name": "MYJD_PASSWORD"
				}
			],
			"image": "jaymoulin/jdownloader:1.4.3",
			"logo": "https://raw.githubusercontent.com/Steveincr/pi-hosted/master/images/jdownloader.png",
			"name": "JDownloader",
			"platform": "linux",
			"ports": [
				"3129:3129/tcp"
			],
			"restart_policy": "unless-stopped",
			"title": "JDownloader",
			"type": 1,
			"volumes": [
				{
					"bind": "/docker/config/JDownloader",
					"container": "/opt/JDownloader/cfg"
				},
				{
					"bind": "/docker/download",
					"container": "/opt/JDownloader/Downloads"
				}
			]
		},
		{
			"categories": [
				"Books"
			],
			"description": "LazyLibrarian is a program to follow authors and grab metadata for all your digital reading needs.",
			"env": [
				{
					"default": "1000",
					"label": "PUID",
					"name": "PUID"
				},
				{
					"default": "1003",
					"label": "PGID",
					"name": "PGID"
				}
			],
			"image": "linuxserver/lazylibrarian:latest",
			"logo": "https://raw.githubusercontent.com/Steveincr/pi-hosted/master/images/lazylibrarian-icon.png",
			"name": "lazylibrarian",
			"platform": "linux",
			"ports": [
				"5299:5299/tcp"
			],
			"restart_policy": "unless-stopped",
			"title": "LazyLibrarian",
			"type": 1,
			"volumes": [
				{
					"container": "/config"
				},
				{
					"container": "/downloads"
				},
				{
					"container": "/books"
				}
			]
		},
		{
			"categories": [
				"Other",
				"Tools"
			],
			"description": "An Enhanced drop in replacement for Mysql",
			"env": [
				{
					"default": "1000",
					"label": "PUID",
					"name": "PUID"
				},
				{
					"default": "1003",
					"label": "PGID",
					"name": "PGID"
				},
				{
                    "label": "MYSQL_DATABASE",
                    "name": "MYSQL_DATABASE",
                    "default": ""
                },
				{
					"label": "MYSQL_USER",
					"name": "MYSQL_USER",
					"default": ""
				},
				{
                    "label": "MYSQL_PASSWORD",
                    "name": "MYSQL_PASSWORD",
                    "default": "dbpassword"
				},
                {
					"label": "MYSQL_ROOT_PASSWORD",
					"name": "MYSQL_ROOT_PASSWORD",
					"default": "rootpassword"
				}
			],
			"image": "linuxserver/mariadb:arm64v8-latest",
			"logo": "https://raw.githubusercontent.com/Steveincr/pi-hosted/master/images/mariadb-icon.png",
			"name": "mariadb",
			"platform": "linux",
			"ports": [
				"3306:3306/tcp"
			],
			"restart_policy": "unless-stopped",
			"title": "MariaDB",
			"type": 1,
			"volumes": [
				{
					"bind": "/docker/config/Mariadb",
					"container": "/config"
				}
			]
		},
		{
			"categories": [
				"Other",
				"Tools"
			],
			"description": "A self-hosted recipe manager and meal planner",
			"image": "hkotel/mealie:latest",
			"logo": "https://raw.githubusercontent.com/Steveincr/pi-hosted/master/images/mealie.png",
			"name": "mealie",
			"note": "Default Credentials: Username: changeme@email.com Password: MyPassword. Documentation is Available \u003ca href='https://hay-kot.github.io/mealie/documentation/getting-started/install/'\u003ehere\u003c/a\u003e.",
			"platform": "linux",
			"ports": [
				"9925:80/tcp"
			],
			"restart_policy": "unless-stopped",
			"title": "Mealie",
			"type": 1,
			"volumes": [
				{
					"bind": "/docker/config/mealie",
					"container": "/app/data"
				}
			],
			"env": [
				{
					"default": "1000",
					"label": "PUID",
					"name": "PUID"
				},
				{
					"default": "1003",
					"label": "PGID",
					"name": "PGID"
				},
				{
					"default": "America/Costa_Rica",
					"label": "TZ",
					"name": "TZ"
				},
				{
					"default": "2",
					"label": "WEB_CONCURRENCY",
					"name": "WEB_CONCURRENCY"
				},
				{
					"default": "8",
					"label": "MAX_WORKERS",
					"name": "MAX_WORKERS"
				},
				{
					"default": true,
					"label": "RECIPE_PUBLIC",
					"name": "RECIPE_PUBLIC"
				},
				{
					"default": true,
					"label": "RECIPE_SHOW_NUTRITION",
					"name": "RECIPE_SHOW_NUTRITION"
				},
				{
					"default": true,
					"label": "RECIPE_SHOW_ASSETS",
					"name": "RECIPE_SHOW_ASSETS"
				},
				{
					"default": true,
					"label": "RECIPE_LANDSCAPE_VIEW",
					"name": "RECIPE_LANDSCAPE_VIEW"
				},
				{
					"default": false,
					"label": "RECIPE_DISABLE_COMMENTS",
					"name": "RECIPE_DISABLE_COMMENTS"
				},
				{
					"default": false,
					"label": "RECIPE_DISABLE_AMOUNT",
					"name": "RECIPE_DISABLE_AMOUNT"
				}
			]
		},
		{
			"categories": [
				"Web",
				"Proxy"
			],
			"description": "Nginx is a web server with a strong focus on high concurrency, performance and low memory usage. It can also act as a reverse proxy server for HTTP, HTTPS, SMTP, POP3, and IMAP protocols, as well as a load balancer and an HTTP cache.",
			"env": [
				{
					"default": "1000",
					"label": "PUID",
					"name": "PUID"
				},
				{
					"default": "1003",
					"label": "PGID",
					"name": "PGID"
				}
			],
			"image": "linuxserver/nginx:latest",
			"logo": "https://raw.githubusercontent.com/Steveincr/pi-hosted/master/images/nginx-icon.png",
			"name": "nginx",
			"platform": "linux",
			"ports": [
				"8080:80/tcp",
				"8443:443/tcp"
			],
			"restart_policy": "unless-stopped",
			"title": "Nginx",
			"type": 1,
			"volumes": [
				{
					"bind": "/docker/config/Nginx",
					"container": "/config"
				}
			]
		},
		{
			"categories": [
				"Proxy",
				"Tools"
			],
			"description": "Nginx Proxy Manager enables you to easily forward to your websites running at home or otherwise, including free SSL, without having to know too much about Nginx or Letsencrypt.  Please see the install document at https://github.com/novaspirit/pi-hosted/tree/master/docs installing the template",
			"logo": "https://raw.githubusercontent.com/Steveincr/pi-hosted/master/images/proxy_mgr.png",
			"name": "nginx-proxy-manager",
			"platform": "linux",
			"ports": [
				"80:80/tcp",
				"81:81/tcp",
				"443:443/tcp"
			],
			"env": [
				{
					"default": "1000",
					"label": "PUID",
					"name": "PUID"
				},
				{
					"default": "1003",
					"label": "PGID",
					"name": "PGID"
				},
                {
					"default": "America/Costa_Rica",
                    "label": "TZ",
                    "name": "TZ"
                },
				{
					"default": "password",
					"label": "DATABASE_PASSWORD",
					"name": "DATABASE_PASSWORD"
				},
				{
					"default": "password",
					"label": "MYSQL_ROOT_PASSWORD",
					"name": "MYSQL_ROOT_PASSWORD"
				}
				
			],
			"restart_policy": "unless-stopped",
			"title": "Nginx Proxy Manager",
			"type": 3,
			"repository": {
				"stackfile": "stack/nginx-proxy-manager.yml",
				"url": "https://github.com/novaspirit/pi-hosted"
			}
		},		
		{
			"categories": [
				"Other"
			],
			"description": "OpenVPN Access Server is a full featured secure network tunneling VPN software solution that integrates OpenVPN server capabilities, enterprise management capabilities, simplified OpenVPN Connect UI, and OpenVPN Client software packages that accommodate Windows, MAC, Linux, Android, and iOS environments.",
			"env": [
				{
					"label": "INTERFACE",
					"name": "INTERFACE",
					"default": "eth0"
				},
				{
					"default": "1000",
					"label": "PUID",
					"name": "PUID"
				},
				{
					"default": "1003",
					"label": "PGID",
					"name": "PGID"
				}
			],
			"image": "linuxserver/openvpn-as:latest",
			"logo": "https://raw.githubusercontent.com/Steveincr/pi-hosted/master/images/openvpn-as-icon.png",
			"name": "openvpn-as",
			"platform": "linux",
			"ports": [
				"943:943/tcp",
				"9443:9443/tcp",
				"1194:1194/udp"
			],
			"restart_policy": "unless-stopped",
			"title": "OpenVPN Access Server",
			"type": 1,
			"volumes": [
				{
					"bind": "/docker/config/OpenVPN-AS",
					"container": "/config"
				}
			]
		},
		{
			"categories": [
				"Other",
				"Tools"
			],
			"description": "A Linux network-level advertisement and Internet tracker blocking application which acts as a DNS sinkhole.",
			"image": "pihole/pihole:latest",
			"logo": "https://raw.githubusercontent.com/Steveincr/pi-hosted/master/images/pihole.png",
			"name": "pihole",
			"note": "When the installation is complete, navigate to your.ip.goes.here:1010/admin. Follow the article \u003ca href='https://medium.com/@niktrix/getting-rid-of-systemd-resolved-consuming-port-53-605f0234f32f'\u003ehere\u003c/a\u003e if you run into issues binding to port 53.",
			"platform": "linux",
			"ports": [
				"53:53/tcp",
				"53:53/udp",
				"67:67/udp",
				"1010:80/tcp",
				"4443:443/tcp"
			],
			"restart_policy": "unless-stopped",
			"title": "Pi-Hole",
			"type": 1,
			"volumes": [
				{
					"bind": "/docker/config/PiHole",
					"container": "/etc/pihole"
				},
				{
					"bind": "/docker/config/PiHole/DNS",
					"container": "/etc/dnsmasq.d"
				}
			]
		},
		{
			"categories": [
				"Video",
				"Music"
			],
			"description": "Your favorite movies, TV, music, web shows, podcasts, and more, all streamed to your favorite screens.",
			"env": [
				{
					"default": "1000",
					"label": "PUID",
					"name": "PUID"
				},
				{
					"default": "1003",
					"label": "PGID",
					"name": "PGID"
				},
				{
					"default": "latest",
					"label": "VERSION",
					"name": "VERSION"
				}
			],
			"image": "linuxserver/plex:latest",
			"logo": "https://raw.githubusercontent.com/Steveincr/pi-hosted/master/images/plex-icon.png",
			"name": "plex",
			"network": "host",
			"platform": "linux",
			"restart_policy": "unless-stopped",
			"title": "Plex",
			"type": 1,
			"volumes": [
				{
					"bind": "/docker/config/Plex",
					"container": "/config"
				},
				{
					"bind": "docker/data/media/tv",
					"container": "/tv"
				},
				{
					"bind": "/docker/data/media/movies",
					"container": "/movies"
				}
			]
		},
		{
			"categories": [
				"Downloaders"
			],
			"description": "The qBittorrent project aims to provide an open-source software alternative to µTorrent. qBittorrent is based on the Qt toolkit and libtorrent-rasterbar library.",
			"env": [
				{
					"default": "1000",
					"label": "PUID",
					"name": "PUID"
				},
				{
					"default": "1003",
					"label": "PGID",
					"name": "PGID"
				},
				{
					"default": "8080",
					"label": "WEBUI_PORT",
					"name": "WEBUI_PORT"
				},
                {
					"default": "America/Costa_Rica",
                    "label": "TZ",
                    "name": "TZ"
                }
			],
			"image": "linuxserver/qbittorrent:latest",
			"logo": "https://raw.githubusercontent.com/Steveincr/pi-hosted/master/images/qbittorrent-icon.png",
			"name": "qbittorrent",
			"platform": "linux",
			"ports": [
				"6881:6881/tcp",
				"6881:6881/udp",
				"8080:8080/tcp"
			],
			"restart_policy": "unless-stopped",
			"title": "qBittorrent",
			"type": 1,
			"volumes": [
				{
					"bind": "/docker/config/qBittorrent",
					"container": "/config"
				},
				{
					"bind": "/docker/data",
					"container": "/downloads"
				}
			]
		},
		{
			"categories": [
				"Downloaders",
				"Video"
			],
			"description": "Radarr - A fork of Sonarr to work with movies à la Couchpotato.",
			"env": [
				{
					"default": "1000",
					"label": "PUID",
					"name": "PUID"
				},
				{
					"default": "1003",
					"label": "PGID",
					"name": "PGID"
				}
			],
			"image": "linuxserver/radarr:latest",
			"logo": "https://raw.githubusercontent.com/Steveincr/pi-hosted/master/images/radarr.png",
			"name": "radarr",
			"platform": "linux",
			"ports": [
				"7878:7878/tcp"
			],
			"restart_policy": "unless-stopped",
			"title": "Radarr",
			"type": 1,
			"volumes": [
				{
					"bind": "/docker/config/Radarr",
					"container": "/config"
				},
				{
					"bind": "/docker/data",
					"container": "/data"
				},
				{
					"bind": "/docker/data/media/movies",
					"container": "/movies"
				}
			]
		},
		{
			"categories": [
				"Other",
				"Tools"
			],
			"description": "Snippet Box is a simple self-hosted app for organizing your code snippets.",
			"image": "pawelmalak/snippet-box:arm",
			"logo": "https://raw.githubusercontent.com/Steveincr/pi-hosted/master/images/snibox.png",
			"name": "Snippet-box",
			"note": "Label-oriented interface with search. Supports various programming languages, markdown, plain text.",
			"platform": "linux",
			"ports": [
				"5010:5000/tcp"
			],
			"restart_policy": "unless-stopped",
			"title": "Snippet-box",
			"type": 1,
			"volumes": [
				{
					"bind": "/docker/config/Snippet-box",
					"container": "/app/data"
				}
			]
		},
		{
			"categories": [
				"Downloaders",
				"Video"
			],
			"description": "Sonarr (formerly NZBdrone) is a PVR for usenet and bittorrent users. It can monitor multiple RSS feeds for new episodes of your favorite shows and will grab, sort and rename them. It can also be configured to automatically upgrade the quality of files already downloaded when a better quality format becomes available.",
			"env": [
				{
					"default": "1000",
					"label": "PUID",
					"name": "PUID"
				},
				{
					"default": "1003",
					"label": "PGID",
					"name": "PGID"
				}
			],
			"image": "linuxserver/sonarr:latest",
			"logo": "https://raw.githubusercontent.com/Steveincr/pi-hosted/master/images/sonarr-icon.png",
			"name": "sonarr",
			"platform": "linux",
			"ports": [
				"8989:8989/tcp"
			],
			"restart_policy": "unless-stopped",
			"title": "Sonarr",
			"type": 1,
			"volumes": [
				{
					"bind": "/docker/config/Sonarr",
					"container": "/config"
				},
				{
					"bind": "/docker/data/media/tv",
					"container": "/tv"
				},
				{
					"bind": "/docker/data",
					"container": "/data"
				}
			]
		},
		{
			"categories": [
				"Other",
				"Tools"
			],
			"description": "Wikijs A modern, lightweight and powerful wiki app built on NodeJS.",
			"image": "linuxserver/wikijs:latest",
			"logo": "https://raw.githubusercontent.com/Steveincr/pi-hosted/master/images/wikijs.png",
			"name": "wikijs",
			"platform": "linux",
			"ports": [
				"3100:3000/tcp"
			],
			"restart_policy": "unless-stopped",
			"title": "Wikijs",
			"type": 1,
			"volumes": [
				{
					"bind": "/docker/config/Wikijs",
					"container": "/config"
				},
				{
					"bind": "/docker/config/Wikijs/data",
					"container": "/data"
				}
			]
		},
		{
			"categories": [
				"Other",
				"Tools"
			],
			"description": "A Docker image for Windows 2000 Advanced Server with SP4.",
			"image": "hectormolinero/qemu-win2000:latest",
			"logo": "https://raw.githubusercontent.com/Steveincr/pi-hosted/master/images/win2000.png",
			"note":"Why? Your scientists were so preoccupied with whether or not they could, that they didn't stop to think if they should. -- Dr. Ian Malcolm",
			"name": "win2000",
			"platform": "linux",
			"ports": [
				"3389:3389/tcp",
				"5900:5900/tcp",
				"6080:6080/tcp"
			],
			"restart_policy": "unless-stopped",
			"title": "Windows 2000",
			"type": 1,
			"volumes": [
				{
					"bind": "/docker/config/Win2000/zdrive",
					"container": "/mnt"
				}
			]
		},
		{
			"categories": [
				"Other",
				"VPN"
			],
			"description": "You have found the easiest way to install & manage WireGuard on any Linux host!",
			"image": "weejewel/wg-easy:latest",
			"logo": "https://raw.githubusercontent.com/Steveincr/pi-hosted/master/images/wireguard.png",
			"name": "wg-easy",
			"platform": "linux",
			"title": "Wireguard Server",
			"type": 3,
			"repository": {
				"stackfile": "stack/wireguard-easy.yml",
				"url": "https://github.com/novaspirit/pi-hosted"
			}
		},
		{
			"categories":[
				"WordPress",
				"Web"
			],
			"description":"Wordpress setup with a MySQL database",
			"env":[
				{
					"default": "5080",
					"name":"WEB_SERVER_PORT",
					"label":"External Port for webserver forward to port 80"
				},
				{
					"default": "wordpress",
					"name":"MYSQL_DATABASE_USER_NAME",
					"label":"Database user name"
				},
				{
					"name":"MYSQL_DATABASE_PASSWORD",
					"label":"Database password for user"
				},
				{
					"name":"MYSQL_DATABASE_ROOT_PASSWORD",
					"label":"Database root password"
				}
			],
			"logo":"https://raw.githubusercontent.com/Steveincr/pi-hosted/master/images/wordpress.png",
			"note":"Deploys a Wordpress instance connected to a MySQL database.",

			"platform":"linux",

			"repository":{
				"url": "https://github.com/novaspirit/pi-hosted",
				"stackfile": "stack/wordpress-stack.yml"
			},
			"title":"Wordpress",
			"type": 3
		},
		{
			"categories": [
				"Other",
				"Downloaders"
			],
			"description": "YoutubeDL-Material is a Material Design frontend for youtube-dl. It's coded using Angular 9 for the frontend, and Node.js on the backend.",
			"image": "tzahi12345/youtubedl-material:latest",
			"logo": "https://raw.githubusercontent.com/Steveincr/pi-hosted/master/images/ytdlm.png",
			"name": "youtubedl-material",
			"platform": "linux",
			"ports": [
				"17442:17442/tcp"
			],
			"restart_policy": "unless-stopped",
			"title": "YouTubeDL-Material",
			"type": 1,
			"volumes": [
				{
					"bind": "/docker/config/YTDLM",
					"container": "/app/appdata"
				},
				{
					"bind": "/docker/data/Youtube/Video",
					"container": "/app/video"
				},
				{
					"bind": "/docker/data/Youtube/Subscriptions",
					"container": "/app/subscriptions"
				},
				{
					"bind": "/docker/data/Youtube/Users",
					"container": "/app/users"
				},
				{
					"bind": "/docker/data/Youtube/Audio",
					"container": "/app/audio"
				}
			]
		}
	]
}
